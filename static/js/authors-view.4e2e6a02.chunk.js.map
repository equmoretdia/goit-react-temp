{"version":3,"file":"static/js/authors-view.4e2e6a02.chunk.js","mappings":"uKACA,MAAwB,2B,SCCT,SAASA,EAAWC,GAAY,IAATC,EAAID,EAAJC,KACpC,OAAOC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAEJ,GACvC,C,uGCsCA,UA9BoB,WAClB,IACQK,GADSC,EAAAA,EAAAA,MACTD,SAERE,GAA8BC,EAAAA,EAAAA,UAAS,MAAKC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAArCI,EAAOF,EAAA,GAAEG,EAAUH,EAAA,GAI1B,OAHAI,EAAAA,EAAAA,YAAU,WACRC,EAAAA,KAA4BC,KAAKH,EACnC,GAAG,KAEDI,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAb,SAAA,EACEH,EAAAA,EAAAA,KAACH,EAAAA,EAAW,CAACE,KAAK,YACjBW,IACCV,EAAAA,EAAAA,KAAA,MAAAG,SACGO,EAAQO,KAAI,SAAAC,GAAM,OACjBlB,EAAAA,EAAAA,KAAA,MAAAG,UACEH,EAAAA,EAAAA,KAACmB,EAAAA,GAAO,CAACC,GAAE,GAAAC,OAAKjB,EAAQ,KAAAiB,OAAIH,EAAOI,IAAKnB,SAAEe,EAAOK,QAD1CL,EAAOI,GAEX,QAYjB,C","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","views/AuthorsView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}\n","import { useState, useEffect } from 'react';\n// import { useState, useEffect, lazy, Suspense } from 'react';\nimport { NavLink, useLocation } from 'react-router-dom';\n// import { NavLink, Route, useMatch } from 'react-router-dom';\nimport * as bookShelfAPI from '../services/bookshelf-api';\nimport PageHeading from '../components/PageHeading/PageHeading';\n// // import AuthorSubView from './AuthorSubView';\n\n// const AuthorSubView = lazy(() =>\n//   import('./AuthorSubView.js' /* webpackChunkName: \"authors-subview\"*/)\n// );\n\nconst AuthorsView = () => {\n  const location = useLocation();\n  const { pathname } = location;\n  //   const { url, path } = useMatch();\n  const [authors, setAuthors] = useState(null);\n  useEffect(() => {\n    bookShelfAPI.fetchAuthors().then(setAuthors);\n  }, []);\n  return (\n    <>\n      <PageHeading text=\"Authors\" />\n      {authors && (\n        <ul>\n          {authors.map(author => (\n            <li key={author.id}>\n              <NavLink to={`${pathname}/${author.id}`}>{author.name}</NavLink>\n            </li>\n          ))}\n        </ul>\n      )}\n      {/* <hr />\n      <Suspense fallback={<h1>Load subroute...</h1>}>\n        <Route path={`${path}/:authorId`}>\n          {authors && <AuthorSubView authors={authors} />}\n        </Route>\n      </Suspense> */}\n    </>\n  );\n};\n\nexport default AuthorsView;\n"],"names":["PageHeading","_ref","text","_jsx","className","styles","children","pathname","useLocation","_useState","useState","_useState2","_slicedToArray","authors","setAuthors","useEffect","bookShelfAPI","then","_jsxs","_Fragment","map","author","NavLink","to","concat","id","name"],"sourceRoot":""}