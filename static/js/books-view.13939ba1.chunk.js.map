{"version":3,"file":"static/js/books-view.13939ba1.chunk.js","mappings":"sKACA,MAAwB,2B,SCCT,SAASA,EAAWC,GAAY,IAATC,EAAID,EAAJC,KACpC,OAAOC,EAAAA,EAAAA,KAAA,MAAIC,UAAWC,EAAaC,SAAEJ,GACvC,C,mDCwGA,UA1CkB,WAWhB,OACEC,EAAAA,EAAAA,KAAAI,EAAAA,SAAA,CAAAD,UACEH,EAAAA,EAAAA,KAACH,EAAAA,EAAW,CAACE,KAAK,WA2BxB,C","sources":["webpack://react-homework-template/./src/components/PageHeading/PageHeading.module.css?b132","components/PageHeading/PageHeading.js","views/BooksView.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"title\":\"PageHeading_title__1wPIF\"};","import styles from './PageHeading.module.css';\n\nexport default function PageHeading({ text }) {\n  return <h1 className={styles.title}>{text}</h1>;\n}\n","// import { useEffect } from 'react';\n// // import { useState} from 'react';\n// import { Link, useRouteMatch, useLocation } from 'react-router-dom';\n// // // import { Link, useRouteMatch, useLocation } from 'react-router-dom';\n// import slugify from 'slugify';\n// // import * as bookShelfAPI from 'services/bookshelf-api';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { booksOperations, booksSelectors } from 'redux/books';\n// // import * as booksOperations from 'redux/books/booksOperations';\n// import PageHeading from 'components/PageHeading/PageHeading';\n\n// const makeSlug = string => slugify(string, { lower: true });\n\n// export default function BooksView() {\n//   const location = useLocation();\n//   const { url } = useRouteMatch();\n\n//   // const [books, setBooks] = useState([]);\n//   const dispatch = useDispatch();\n//   // const books = useSelector(state => state.books.entities);\n//   const books = useSelector(booksSelectors.getBooks);\n\n//   // useEffect(() => {\n//   //   bookShelfAPI.fetchBooks().then(setBooks);\n//   // }, []);\n\n//   useEffect(() => dispatch(booksOperations.fetchBooks()), [dispatch]);\n\n//   return (\n//     <>\n//       <PageHeading text=\"Books\" />\n//       {/* {books && ( */}\n//       {books.length > 0 && (\n//         <ul>\n//           {books.map(book => (\n//             <li key={book.id}>\n//               <Link\n//                 to={{\n//                   pathname: `${url}/${makeSlug(`${book.title} ${book.id}`)}`,\n//                   state: {\n//                     from: {\n//                       location,\n//                       label: 'Back to all books',\n//                     },\n//                   },\n//                 }}\n//               >\n//                 {book.title}\n//               </Link>\n//             </li>\n//           ))}\n//         </ul>\n//       )}\n//     </>\n//   );\n// }\n\n// import { useEffect } from 'react';\n// import { Link, useLocation } from 'react-router-dom';\n// import slugify from 'slugify';\n// import { useSelector, useDispatch } from 'react-redux';\n// import { booksOperations, booksSelectors } from 'redux/books';\nimport PageHeading from 'components/PageHeading/PageHeading';\n\n// const makeSlug = string => slugify(string, { lower: true });\n\nconst BooksView = () => {\n  // const location = useLocation();\n  // const { pathname } = location;\n\n  // const dispatch = useDispatch();\n  // const books = useSelector(booksSelectors.getBooks);\n  // console.log(books);\n  // useEffect(() => {\n  //   dispatch(booksOperations.fetchBooks());\n  // }, [dispatch]);\n\n  return (\n    <>\n      <PageHeading text=\"Books\" />\n      {/* <PageHeading text=\"Books\" />\n      {books.length > 0 && (\n        <ul>\n          {books.map(book => (\n            <li key={book.id}>\n              <Link\n                to={{\n                  pathname: `${pathname}/${makeSlug(\n                    `${book.title} ${book.id}`\n                  )}`,\n                  state: {\n                    from: {\n                      location,\n                      label: 'Back to all books',\n                    },\n                  },\n                }}\n              >\n                {book.title}\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )} */}\n    </>\n  );\n};\n\nexport default BooksView;\n"],"names":["PageHeading","_ref","text","_jsx","className","styles","children","_Fragment"],"sourceRoot":""}