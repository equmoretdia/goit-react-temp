{"version":3,"file":"static/js/818.16c58d88.chunk.js","mappings":"6LA8DA,UA1Da,WAAO,IAADA,EACjBC,GAAwBC,EAAAA,EAAAA,UAAS,CAC/B,CAAEC,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,cACrB,CAAED,GAAI,QAASC,KAAM,gBACrBC,GAAAC,EAAAA,EAAAA,GAAAL,EAAA,GARKM,EAAIF,EAAA,GAAEG,EAAOH,EAAA,GAUdI,GAAWC,EAAAA,EAAAA,MACjBC,QAAQC,IAAIH,GAEZ,IAAAI,GAAwCC,EAAAA,EAAAA,MAAiBC,GAAAT,EAAAA,EAAAA,GAAAO,EAAA,GAAlDG,EAAYD,EAAA,GAAEE,EAAeF,EAAA,GAGpCJ,QAAQC,IAAIJ,GAEZ,IAAMU,EAAiC,QAA5BlB,EAAGgB,EAAaG,IAAI,gBAAQ,IAAAnB,EAAAA,EAAI,GAC3CW,QAAQC,IAAIM,GAMZ,IAMME,EAAcb,EAAKc,QAAO,SAAAC,GAAG,OAAIA,EAAIlB,KAAKmB,SAASL,EAAM,IAE/D,OACEM,EAAAA,EAAAA,MAAAC,EAAAA,SAAA,CAAAC,SAAA,EACEC,EAAAA,EAAAA,KAAA,OAAAD,SAAK,sBACLC,EAAAA,EAAAA,KAAA,SAAOC,KAAK,OAAOC,MAAOX,EAAOY,SAXX,SAAAC,GACxB,IAAMC,EAAaD,EAAIE,OAAOJ,MAE9BZ,EADmC,KAAfe,EAAoB,CAAEd,MAAOc,GAAe,CAAC,EAEnE,KAQIL,EAAAA,EAAAA,KAAA,UAAQO,QAAS,kBAAMjB,EAAgB,CAAEkB,EAAG,EAAGC,EAAG,GAAIC,EAAG,SAAU,EAACX,SAAC,yBAGrEC,EAAAA,EAAAA,KAAA,MAAAD,SACGN,EAAYkB,KAAI,SAAAhB,GACf,OACEK,EAAAA,EAAAA,KAAA,MAAAD,UAIEC,EAAAA,EAAAA,KAACY,EAAAA,GAAI,CAAcC,GAAIlB,EAAInB,GAAIsC,MAAO,CAAEC,KAAMjC,GAAWiB,SACtDJ,EAAIlB,MADIkB,EAAInB,KAJRmB,EAAInB,GASjB,QAIR,C","sources":["pages/Dogs.jsx"],"sourcesContent":["// import { useEffect } from 'react';\nimport { useState } from 'react';\nimport { Link, useSearchParams, useLocation } from 'react-router-dom';\n\nconst Dogs = () => {\n  const [dogs, setDogs] = useState([\n    { id: 'dog-1', name: 'dog-1 name' },\n    { id: 'dog-2', name: 'dog-2 name' },\n    { id: 'dog-3', name: 'dog-3 name' },\n    { id: 'dog-4', name: 'dog-4 name' },\n    { id: 'dog-5', name: 'dog-5 name' },\n    { id: 'dog-6', name: 'dog-6 name' },\n    { id: 'dog-7', name: 'dog-7 name' },\n  ]);\n\n  const location = useLocation();\n  console.log(location);\n\n  const [searchParams, setSearchParams] = useSearchParams();\n  // console.log(searchParams.get('b')); //10 if localhost:3000/dogs?a=5&b=10\n\n  console.log(setDogs);\n\n  const dogId = searchParams.get('dogId') ?? '';\n  console.log(dogId);\n\n  //   useEffect(() => {\n  //     //http request if it is required\n  //   }, []);\n\n  const updateQueryString = evt => {\n    const dogIdValue = evt.target.value;\n    const nextParames = dogIdValue !== '' ? { dogId: dogIdValue } : {};\n    setSearchParams(nextParames);\n  };\n\n  const visibleDogs = dogs.filter(dog => dog.name.includes(dogId));\n\n  return (\n    <>\n      <div>Dogs collection:</div>\n      <input type=\"text\" value={dogId} onChange={updateQueryString} />\n      <button onClick={() => setSearchParams({ a: 5, b: 10, c: 'hello' })}>\n        Change searchParams\n      </button>\n      <ul>\n        {visibleDogs.map(dog => {\n          return (\n            <li key={dog.id}>\n              {/* <Link to=string only thus following row approach \n              is good to avoid possible mistakes:  \n              <Link key={dog.id} to={`${dog.id}`}></Link> */}\n              <Link key={dog.id} to={dog.id} state={{ from: location }}>\n                {dog.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nexport default Dogs;\n"],"names":["_searchParams$get","_useState","useState","id","name","_useState2","_slicedToArray","dogs","setDogs","location","useLocation","console","log","_useSearchParams","useSearchParams","_useSearchParams2","searchParams","setSearchParams","dogId","get","visibleDogs","filter","dog","includes","_jsxs","_Fragment","children","_jsx","type","value","onChange","evt","dogIdValue","target","onClick","a","b","c","map","Link","to","state","from"],"sourceRoot":""}